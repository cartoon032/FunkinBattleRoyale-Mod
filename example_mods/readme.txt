This was last updated as of 1.0.0-U33. 
Note that lua is not yet enabled due to some issues

This file might look weird inside of Notepad, I highly recommend using Sublime Text, Notepad++ or Visual Studio Code for editing and reading text files

If this file is confusing or you need help, feel free to join the Discord server and ask for help https://discord.gg/28GPGTRuuR

Most of this readme assumes you have file extensions visible in your file manager 
* On Windows, you can change this in the View tab of Explorer


You can find some information at https://github.com/superpowers04/Super-Engine/wiki although as of editing this, it is very out of date

FOLDERS AND WHAT THEY MEAN:
 - stages | Where custom stages go
 - characters | Where custom characters go
 - charts | Where charts will go. You can just put the json files, inst and voices in a folder and Super Engine will automatically read them
 - noteassets | You can put a png and xml from note skins here
 - weeks | Where weeks go, eventually there should be documentation on how to make them at https://github.com/superpowers04/Super-Engine/wiki
 - packs | You can make folders and then put charts and characters inside of them to organise your charts, characters and add pack specific scripts without having 20 copies of the same script. While this isn't required, it might make your mods folder less of a mess
 - scripts | Global scripts that you can use to do things like adding new features and such, scripts can contain options and such. 
    Look at https://cdn.discordapp.com/attachments/908215636352716831/916629405147742228/Arrow_Options.zip for an example
    You can find a wiki here: https://github.com/superpowers04/Super-Engine/wiki/Character-and-Chart-scripts
 
EXTRA FILES:
	You can use custom title music by adding oggs:
		Morning theme is from 6(6 AM) to 11(11 AM) - breakfast or mods/title-morning.ogg
		Regular theme is from 11(11 AM) to 18(6 PM) - Gettin' Freaky or mods/title-day.ogg
		Evening theme is from 18(6 PM) to 22(10 PM) - Give a Lil Bit Back or mods/title-evening.ogg
		Night theme is active from 22(10 PM) to 6(6 AM) - Fresh Chill Mix or mods/title-night.ogg
	You can also manually edit the mods/menuTimes.json that's generated by the game
 
	A custom background can be used by placing a png named bg.png in the mods folder. 
		The game's resolution is about 1280px Horizontally and 720px vertically
 
	Custom fonts can be used by putting a ttf file named font.ttf in your mods folder. 
		This can be enforced with Visibility > Force Generic Font, note that not all menus will work with all fonts and some things might appear off.
		A good font that could be used is https://gamebanana.com/tools/8509, it keeps the funkin style in places that a normal font is used

ADDING EXISTING CHARTS:
	There are multiple ways to do this:

		*The main way is to move the chart and it's respective Inst.ogg/Voices.ogg's to a new folder named the song inside of mods/charts
		
		*You can make folders inside of mods/packs to organise your songs, make a new folder inside of Packs, named whatever. 
			Make a charts folder inside of that, then put your songs from mods/charts into there

		*You can also use the Import Songs From Existing Mods option
			This'll automatically organise songs into a pack for the mod

		*If you don't want to add a song but would like to play it, just drag and drop the chart into your game. The game will try to detect the Inst and Voices from there.


MAKING CHARTS:
	Go to Options > Modifications > Content Creation Mode and turn it on. 
	Make a new folder inside of mods/charts named the song
	Move your audio files(Inst.ogg and Voices.ogg, Make sure they're properly converted and not just renamed MP3's) into the folder
	Open Modded Songs, hover over the song like you're about to play it and press 7(Or right click on the song)
	Then you're free to chart, just don't forget to save


MAKING CHARACTERS:
	Note that Super Engine characters ARE NOT compatible with Psych Engine characters. The json format might look alike but they're completely different. 
	Loading a Super Engine character in Psych will crash. 
	Some characters might load in Super Engine, however they won't have offsets and you'll probably have to edit them 
	Psych Engine character support is not a priority since importing characters normally works perfectly fine with Psych characters 

	Importing the characters:
		There are 2 ways to do this:
			1:
				Make a new folder inside of mods/characters,
				then drop the png and xml into the folder, and rename them to "character.png" and "character.xml". (If you don't see .png or .xml on the original file names then they aren't needed)
		 	2:
		 		Drag and drop the png onto the game, select the name you want and press continue
	Ingame:
		Go to Options > Modifications > Content Creation Mode and make sure it's on. 
		Go to Options > Modifications > X Character > find your character(All invalid characters appear at the top) and then Press 2.
			This'll open the character as dad. Currently adding animations is a bit wonky as BF so you'll want to add them as dad first
		You can press H for help with using animation debug.
		Pressing M will pull up a menu of modes. You can select Animation Binder to setup animations for your character and edit some options like their health bar color.
		I'd recommend saving after setting up animations. You can press 3 to save

		If you want to edit a BF character, add the animations the character as an opponent. 
		Upon exiting the animation binder, press 3 to save, then 7 to switch over to offsetting for BF

		*BF uses inverted animations so BF NOTE RIGHT will be singLEFT and BF NOTE LEFT will be singRIGHT.
 
 
	If there are things you'd like to do that aren't possible with the animation editor, editing the json manually might be a good idea.
	You can find the wiki page for character jsons here: https://github.com/superpowers04/Super-Engine/wiki/Character-JSON
	You can also provide a script.hscript to add custom scripting to your characters for things like custom animations, character position manipulation and more


MAKING SCRIPTS:
	Scripts can be used to add new mechanics, add entirely new input setups, make things look cool or just allow you to break the game in weird ways
	Currently, the game mostly supports HScript, lua support is planned but will not be as powerful since HScript is basically haxe.
	If you end up getting confused or need help, feel free to ask for help on the Discord server

	If you're making a song:
		Put a script.hx, script.hscript or if you're using lua, a script.lua file in your song's chart folder and edit that
	If you're making a pack and want it to apply to all of the songs in that pack:
		Make a new folder named `scripts` inside of your pack folder, Beside your charts folder
		Put a script.hx, script.hscript or if you're using lua, a script.lua file in the folder you just created and edit that
	If you're making a charater:
		Put a script.hx, or a script.hscript in the folder for your character and edit that
			(Lua support isn't currently available with characters)
	If you're making a global script:
		Make a new folder inside of your mods/scripts folder named what you want the script to be named
		Put a script.hx, script.hscript or if you're using lua, a script.lua file in the folder you just created and edit that

	NOTE ABOUT lua SCRIPTS:
		To allow songs from other engines to load without any tinkering, a lua file has to contain `isSE = true` or `function initScript` somewhere in the file. 
		If you do not have this, the file will be ignored

	Some recommended practices:
		* Use a proper text editor with syntax highlighting instead of notepad. 
			Examples: Sublime Text, Notepad++, Visual Studio Code, Visual Studio, or Atom
		* Always have an initScript function, in some cases, this is used to verify the script has loaded properly
		* Make characters at the beginning of a song and store them in a variable instead of in the middle of a song. 
			The game will warn you if you don't do this

			If you use a change Character note, this is automatically done by the engine
		* Load all sprites, sounds and other assets at the beginning of a song. This'll prevent the game from lagging in the middle of a song
			For FlxSprites, you can either immediately add them  and chnage their visiblity or add them later. Add uses a lot less resources than creating the sprite on-demand

		* Try to reuse objects as much as you can. This'll lower memory usage
		* Open the game's Github page or download the game's source code to see what variables and functions a class/object has
			Do note, I'm kinda bad at organisation



MAKING STAGES:
	Stages are more complex than making a character as there is no Stage Debug or Stage Maker. 
	Stages are handled through scripts instead of a json, this makes them much harder to get into, but you can do some really cool things with stages as they are basically just a script
	If you end up getting confused or need help, feel free to ask for help on the Discord server

	I'd recommend getting a better text editor like Sublime Text, Notepad++, or Visual Studio Code as they are easier to code with than Notepad. 
	* If you're using Sublime Text or Visual Studio Code, Make sure to install the Haxe package

	To make a new stage:
		Make a folder named `stages` in your mods folder, add a folder to that named whatever you want the stage to be named
		Make a file named `script.hscript`, this'll be the script you'll use to create the stage.

		Now we have a stage, but if we go ingame with it, it won't actually do anything yet. Lets try adding an image.
		Copy and paste an image into the script's folder(I'd recommend just using your desktop wallpaper as a test but any image is fine) If you want things to be neat, you can make a subfolder named `sprites` and put the picture there

		Open your script.hscript and add ```function initScript(){}```. initScript is the first function that's run when a script is loaded.
		Anything in between the {}'s will be run when initScript is called.

		Now lets actually add our image to the game
		Super Engine has a custom class named BRtools, it allows you to easily create sprites, play sounds and other things without needing to know where the script is. We'll be using this to create our sprite
 
		Add `var background = BRtools.loadFlxSprite(0,0,"wallpaper.png");` inside of the brackets,
		This will create a variable named `background` and then it'll be set to a sprite. The sprite will be positioned at the top left corner of the screen and it'll use the file named "wallpaper.png" as it's graphic
		* The first 0 is it's X value, the higher it is, the more to the right it'll be, the lower it is, the more to the left it'll be
		* The second 0 is it's Y value, the higher it is, the more to the bottom it'll be, the lower it is, the more to the top it'll be
		* "wallpaper.png" is the file the sprite will use as it's image. If you used a subfolder, you'll need to add it to the string, like `sprites/wallpaper.png` 
			* The game's playspace/stage size is 1280x720, no matter the resolution of the device on desktop. However on mobile it seems to depend on your device's aspect ratio, Some offscreen objects might be able to be seen on mobile.
		This will load the sprite but we need to actually add it to the state, for that we can use `state.add(background);`
		
 
SCRIPTABLE MENUS:
	A few menus can be modified using hscript, Currently, those are the Main Menu and the Modded Songs page.
		To add scripts to menus you can make a new folder in a normal script called one of the below names and then pop your hscript files into that
		* 'mainmenu' - MainMenuState
		* 'multilist' - MultiMenuState

OLDER README:
 Characters work like FNF Multi, Check BF-faceanim for an example. You can also make custom animations using IfStates
 Heres an example that adds Garcellos "tight bars, little man" animation into Release:
 {
 	"anim": "garTightBars",
 	"name": "garcello coolguy",
 	"fps": 15,
 	"loop": false,
 	"indices": [],
 	"oneshot":true,"":"Allows your animation to override all other animations, loop will be forced of if this is true",
 	"ifstate":{
 		"variable":"curStep","":"The variable to check in PlayState.hx, curStep and curBeat might be all you need though",
 		"type":"equals","":"valid types are 'equal', 'more','less' and 'contains', if you use contains then the value should be a list of values, like [480,838,521], etc. otherwise the value should always be the same type as the variable",
 		"value":838,"":"The value to check variable against, if type is contains, then this should be a list. Otherwise use the same type as the variable in the game",
 		"check":1,"":"1 = curStep, 0 = curBeat. this has to be the same as variable if you use curStep or curBeat, otherwise you should use the one that plays your animation at the most accurate time"
 	},
 	"":"If the below requirements aren't met, the animation won't be processed. Useful for animations that are locked to a specific stage or song, These are not required",
 	"song":"release","":"The song to play the animation on",
 	"char_side":1,"":"Only play on a specific side, 0 = BF, 1 = Dad, 2 = GF"
 }
 You can find this example on the mod repo under GARCELLO DEAD 